// Generated by CoffeeScript 1.6.3
var Markmotron, events, https, moduleLoader,
  __slice = [].slice;

https = require("https");

events = require("events");

moduleLoader = require("../module_loader");

Markmotron = (function() {
  var emitter;

  function Markmotron() {}

  emitter = new events.EventEmitter;

  emitter.setMaxListeners(0);

  Markmotron.on = function(event, listener) {
    return emitter.on(event, listener);
  };

  Markmotron.once = function(event, listener) {
    return emitter.once(event, listener);
  };

  Markmotron.emit = function(event) {
    var args;
    console.log("Markmotron Emit: ", event);
    args = Array.prototype.slice.call(arguments).slice(1, arguments.length);
    return emitter.emit.apply(emitter, [event].concat(__slice.call(args)));
  };

  Markmotron.removeListener = function(event, listener) {
    return emitter.removeListener(event, listener);
  };

  Markmotron.reload = function() {
    emitter.emit('destroy');
    return https.get(process.env.WHEN_URL, function(res) {
      var hotModulesData;
      hotModulesData = "";
      res.on('data', function(data) {
        return hotModulesData += data;
      });
      return res.on('end', function() {
        var hotModule, hotModules, _i, _len, _results;
        hotModules = JSON.parse(hotModulesData);
        _results = [];
        for (_i = 0, _len = hotModules.length; _i < _len; _i++) {
          hotModule = hotModules[_i];
          _results.push(moduleLoader.load(hotModule));
        }
        return _results;
      });
    });
  };

  return Markmotron;

})();

module.exports = Markmotron;
