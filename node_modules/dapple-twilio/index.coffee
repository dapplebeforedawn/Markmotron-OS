https = require "https"
qs = require 'qs'

flatten = (numberWithFormat)->
  numberWithFormat.toString().replace(/[^0-9]/g, '')
gatewayHost = ()->
  "api.twilio.com"

# fakeSend < 0 then it's a fake fail
# fakeSend > 0 then it's a fake success

module.exports = (sid, auth, from, options={})->
  options.fakeSend or= process.env.FAKESEND or= 0
  send: (to, message, cb)->
    gatewayEndpoint = "/2010-04-01/Accounts/#{sid}/SMS/Messages.json"
    
    postBody = qs.stringify {To:to, From:from, Body:message}
    httpAuth = "Basic " + new Buffer(sid + ":" + auth).toString("base64")
    httpOptions =
      host: gatewayHost(),
      port: 443,
      path: gatewayEndpoint,
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
        'Content-Length': postBody.length,
        'Authorization' : httpAuth
      }

    sendMessage = (callback)->
      jsonResponse = ""
      gatewayReq = https.request httpOptions, (res)->
        res.setEncoding('utf8')
        res.on 'data',  (chunk)->
          jsonResponse += chunk
        res.on 'end', ()->
          callback(null, jsonResponse)

      gatewayReq.on 'error', (e)->
        console.log "Error sending gateway request: ", e.message
        callback('Gateway Error ', e)
      gatewayReq.write(postBody)
      gatewayReq.end()

    return cb(null, "Fake Gateway Request Sent") if options.fakeSend > 0
    return cb('Fake Gateway Error', "Fake Gateway Error") if options.fakeSend < 0
    sendMessage cb
