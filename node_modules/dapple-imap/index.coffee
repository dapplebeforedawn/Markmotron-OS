EventEmitter = require("events").EventEmitter
Imap         = require("imap")
mimelib      = require("mimelib-noiconv")
util         = require("util")
imap         = new Imap
  user:       process.env.EMAIL_USERNAME,
  password:   process.env.EMAIL_PASSWORD,
  host:       'imap.gmail.com',
  port:       993,
  tls:        true,
  tlsOptions: { rejectUnauthorized: false }


ImapEmitter = module.exports = new EventEmitter()

openInbox = (cb)->
  imap.openBox('INBOX', true, cb)

normalizeAddressHeaders = (headers)->
  needsNormalized = ["from", "to"]
  for headerName in needsNormalized
    normalized = headers[headerName].map (address)->
      mimelib.parseAddresses(address)
    headers[headerName] = normalized
    headers[headerName] = headers[headerName][0]

moveToArchive = (msgUID)->
  imap.move msgUID, '[Gmail]/All Mail', (err)->
    console.log err if err

searchForMail = (server)->
  server.search ['UNSEEN'], (err, results)->
    f = server.fetch results,
      bodies: [ 'HEADER', 'TEXT' ]

    f.on 'message', (msg, seqno)->
      messageForEvent = { attrs: {}, headers: {}, body: '' }
      msg.on 'body', (stream, info)->
        buffer = ''
        stream.on 'data', (chunk)->
          buffer += chunk.toString('utf8')
        stream.once 'end', ->
          messageForEvent["headers"] = Imap.parseHeader(buffer)
          messageForEvent["body"]    += buffer
          
      msg.once 'attributes', (attrs)->
        messageForEvent['attrs'] = attrs

      msg.once 'end', ->
        normalizeAddressHeaders(messageForEvent.headers)
        ImapEmitter.emit 'mail', messageForEvent
        moveToArchive(messageForEvent.attrs.uid)

    f.once 'error', (err)->
      console.log('IMAP Fetch error: ' + err)
    f.once 'end', ->
      console.log('IMAP Done fetching all messages!')

imap.once 'ready', ->
  console.log "IMAP Ready"
  openInbox (err, box)->
    console.log "IMAP Listening in mailbox: ", box
    throw err if err

imap.once 'error', (err)->
  console.log "Error Connecting IMAP: ", err

imap.on 'mail', (items, err)->
  searchForMail(imap)

imap.connect()
